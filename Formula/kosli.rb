# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.3"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.3/kosli_2.3.3_darwin_amd64.tar.gz"
      sha256 "5169cf9ee9a68c6d2b349477880ac8d38d92a4197b76cbaaad640002fc0dc981"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.3/kosli_2.3.3_darwin_arm64.tar.gz"
      sha256 "f5cbdd99553088da45a538c7ac624a5dc4a5e18664002148e2e8804fde67a61a"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.3/kosli_2.3.3_linux_armv6.tar.gz"
      sha256 "ba233e5d977acb675b632834381aada472edef0902cf70f7d6a73ecbd08760d1"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.3/kosli_2.3.3_linux_amd64.tar.gz"
      sha256 "d92281f4c74a4802e0ca375e09e7418ac5580b450f58ba3ec04dd2a4079e23c8"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.3/kosli_2.3.3_linux_arm64.tar.gz"
      sha256 "7714c1fbba7c20f000d8ec14e43d412a5bcddbe3b6392750e11b9fca17c57d78"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
