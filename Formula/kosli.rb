# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "A CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.7"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.7/kosli_0.1.7_darwin_amd64.tar.gz"
      sha256 "e02ac625fbe80c78bcb5c895137aa564444d6b9ea6140d34504c3c1b799435f4"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.7/kosli_0.1.7_darwin_arm64.tar.gz"
      sha256 "a4d85771ed3e7c8bb75a4d375aaeda30c98ddb81e9abcd2be66ff28491d189b6"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.7/kosli_0.1.7_linux_amd64.tar.gz"
      sha256 "6e6754ead650da85964e056208d389da0179dc3045a839f8e98a050247d5d060"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.7/kosli_0.1.7_linux_arm64.tar.gz"
      sha256 "f7bfa58060afd76a5ef882a4d08d94d89adf16ccbb153c9499a9d8bc86588ee2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.7/kosli_0.1.7_linux_armv6.tar.gz"
      sha256 "309fa30c4c5524efbb30de6958c42df3dfb48158b0416afe315a76b6073d0798"

      def install
        bin.install "kosli"
      end
    end
  end

  depends_on "go"

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
