# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.34"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.34/kosli_0.1.34_darwin_arm64.tar.gz"
      sha256 "6d7461007a5cd3f68932f1858db2fe8cac0c97541c023f775f2ff6e93bb24df3"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.34/kosli_0.1.34_darwin_amd64.tar.gz"
      sha256 "14a432faeb0a001a809912162079a166a4c20b30f64a8a71d7a543dabe978a2f"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.34/kosli_0.1.34_linux_arm64.tar.gz"
      sha256 "91b1ba445cf1b291d6cc426f1de88988f8819a72a82f50bb9458aaf5071402f2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.34/kosli_0.1.34_linux_amd64.tar.gz"
      sha256 "5eff54e95c927fcff3a500b63e84914da7daeb2eb7e94e7d649c709938c7d6ea"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.34/kosli_0.1.34_linux_armv6.tar.gz"
      sha256 "385d7273f35d9902aa780a33a8352cd42e6db257aaae14cba72f4186819a3bad"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
