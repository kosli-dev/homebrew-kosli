# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.4"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.4/kosli_2.3.4_darwin_arm64.tar.gz"
      sha256 "d8227c729cf73603abda43408c8d62b432c34f7f027d31bb7d233438e8d805e7"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.4/kosli_2.3.4_darwin_amd64.tar.gz"
      sha256 "65c240be93dc24caa5fb1616d3963bf256314c1d4cf86f74b4b7b0ac33457f39"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.4/kosli_2.3.4_linux_arm64.tar.gz"
      sha256 "2c31b8a264c87bbd11d31af423047a38a8844771c118d4694a2342e6851d4d55"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.4/kosli_2.3.4_linux_amd64.tar.gz"
      sha256 "1e7363b255a00e7b4024814fd87525d7f887bb7199cfc1aa422a1b38d6b49135"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.4/kosli_2.3.4_linux_armv6.tar.gz"
      sha256 "fee7c135bc1bb6e34d250c211ed6c8a94517ffa502eb94737c00edd8e88d819d"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
