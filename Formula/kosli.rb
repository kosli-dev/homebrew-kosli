# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "A CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.8"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.8/kosli_0.1.8_darwin_arm64.tar.gz"
      sha256 "2a8c2d53175fe92853b7d554b473317b253cf3aa9fa63c0525f33b347a1b1f5c"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.8/kosli_0.1.8_darwin_amd64.tar.gz"
      sha256 "6a727a3872f6e5c042209189635e14235b9450d2767c30687857d89aff538592"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.8/kosli_0.1.8_linux_arm64.tar.gz"
      sha256 "3431d74f708602da7652b154a10fec21e6c0a4f9f0a4f2be87666598a59b62de"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.8/kosli_0.1.8_linux_amd64.tar.gz"
      sha256 "e715d9b059bef6008459782234046f8e174e427919c8c8e7c99b28e60786e617"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.8/kosli_0.1.8_linux_armv6.tar.gz"
      sha256 "21eed2d85ed9b6637e0311d74352ca09f773e403d1e7ed3b36b18f5874bec3dd"

      def install
        bin.install "kosli"
      end
    end
  end

  depends_on "go"

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
