# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.36"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.36/kosli_0.1.36_darwin_arm64.tar.gz"
      sha256 "1d5621822ebeb9a7581fdce8e274cf28872fdf735a40105c8d9858277fc07618"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.36/kosli_0.1.36_darwin_amd64.tar.gz"
      sha256 "4cbd90b6e37ce8426b2fae53429bbfd95b0a9547300a713347ec4308b0ff580b"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.36/kosli_0.1.36_linux_arm64.tar.gz"
      sha256 "a8addc367279233191d78bbdc3ea8688fed53f4922d6c73e69318fcc5e87971a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.36/kosli_0.1.36_linux_amd64.tar.gz"
      sha256 "dd214edeac180f6f04d8c7a9109622ad59043ab3c330ac84f5334326bce55f8b"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.36/kosli_0.1.36_linux_armv6.tar.gz"
      sha256 "1fff57bc43599017db35e8064569523908a287ceb82ca6297353ae827e5cc252"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
