# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.38"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.38/kosli_0.1.38_darwin_amd64.tar.gz"
      sha256 "17c7f64415885e025936f6aebd4717ff2dc6704a4e2e8454a87e349b68d994f2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.38/kosli_0.1.38_darwin_arm64.tar.gz"
      sha256 "b0cc99b415f63cf8cf534ff628a14fdf1e4e4bfe1aa71a46266a18769ddebbbb"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.38/kosli_0.1.38_linux_amd64.tar.gz"
      sha256 "42135e7a6ff70a8abf94de689debbde0f02c5da8ef7b5d31fe8a9ab84407170d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.38/kosli_0.1.38_linux_arm64.tar.gz"
      sha256 "7de808397fce119f9d3ccf45f8f364615146f2a3c4854c7e6c96f6bd9715b1cf"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.38/kosli_0.1.38_linux_armv6.tar.gz"
      sha256 "35829a4423bdf0704736ae5bea0402b0a593153bd87d0ecfe74ae1dadb453b64"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
