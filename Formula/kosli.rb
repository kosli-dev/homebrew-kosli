# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.20"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.20/kosli_0.1.20_darwin_arm64.tar.gz"
      sha256 "733f0704dd324a2f9088fed80e5c264fd6512bfb16c3b56c29d521a5268848db"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.20/kosli_0.1.20_darwin_amd64.tar.gz"
      sha256 "ba39155302b757b9e046cf1dd8bab9cce4f66e242a0d5eb73ec5b6a89968f68c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.20/kosli_0.1.20_linux_arm64.tar.gz"
      sha256 "01aec104b7341178ae11593f908551310a81d5b5c539d64b5b6bd9c120a6d0f2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.20/kosli_0.1.20_linux_amd64.tar.gz"
      sha256 "659fc825be8016aafea8401f3a2cda03b60c344402b0463951ba0119142ce401"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.20/kosli_0.1.20_linux_armv6.tar.gz"
      sha256 "850c3fbb52daff154396453635d9c946eb87ac155dbd23e1c04a3c7df12db730"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
