# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.16"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.16/kosli_0.1.16_darwin_arm64.tar.gz"
      sha256 "94fca67c551ae9d51627aec8f737b4bebdc7225d43995c0f1b87ce82cbbc21bb"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.16/kosli_0.1.16_darwin_amd64.tar.gz"
      sha256 "f9038366411d9c2efab0da4091a630942cc9dba7897b95dc957a2967a440ccd3"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.16/kosli_0.1.16_linux_arm64.tar.gz"
      sha256 "44040afd360eb651a1a00c6040a449018f5ee01ea3494cc5a21104e6242a4500"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.16/kosli_0.1.16_linux_amd64.tar.gz"
      sha256 "9df84ad380d727247a0bcb90894d992d640b11d6adf3fe7e0eb083a0017b8c91"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.16/kosli_0.1.16_linux_armv6.tar.gz"
      sha256 "f6fbfaaa56b9f2abbfab8023d100cc9f0f28aaded1ebaddbefbcf969bf30de73"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
