# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.24"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.24/kosli_0.1.24_darwin_arm64.tar.gz"
      sha256 "555083c25a46f1fbc0395e5e3ec43cef334e640bbcd6258ed51f16bc2a4a3bdb"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.24/kosli_0.1.24_darwin_amd64.tar.gz"
      sha256 "7105a1bd7e9dbb0ca9e3a6d9ebc89d099072069db1049fb296a7670a2651a2a6"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.24/kosli_0.1.24_linux_arm64.tar.gz"
      sha256 "e45b0d8f52a38f5e8bf36c2d1fbaebd188de51ae9a9e2a92482ad3e09ba8e62f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.24/kosli_0.1.24_linux_amd64.tar.gz"
      sha256 "668466fb831fb4a77a622f2f79b01527fdec944c82fb1141e179fe6a954b46c8"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.24/kosli_0.1.24_linux_armv6.tar.gz"
      sha256 "938e2fe465ca076e6347580df50c834a775b5fa4b4036055022200fde326801f"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
