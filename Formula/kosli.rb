# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.21"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.21/kosli_0.1.21_darwin_amd64.tar.gz"
      sha256 "1c6a8e838832bab5b03e9c027ae1647c289c97bf0927e57030bf65ef7715dee6"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.21/kosli_0.1.21_darwin_arm64.tar.gz"
      sha256 "02c3fef50493bf0ae8003429b22d51d7d8eb619ca203372e2873e30a3a961095"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.21/kosli_0.1.21_linux_amd64.tar.gz"
      sha256 "51bfcb174b9a8499f2eea329a39e50cddef8455c26eb59eca75c9384adb4c01a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.21/kosli_0.1.21_linux_arm64.tar.gz"
      sha256 "5e09b22f90f48be84dbb486773aea164ad2986dfb039aa9dc83b30522dddf32e"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.21/kosli_0.1.21_linux_armv6.tar.gz"
      sha256 "cffcf8d6303ee599b8ac39385dfc6ff103e2ae0e19421dbf02b44f12e13c4354"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
