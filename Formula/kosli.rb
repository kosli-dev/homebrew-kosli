# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.4"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.4/kosli_2.6.4_darwin_amd64.tar.gz"
      sha256 "9fd13a656798a28e1b6708306620a191d48e7074106ebe8ffc547871d1c3215f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.4/kosli_2.6.4_darwin_arm64.tar.gz"
      sha256 "b302012d50bd4add83ae92eca1f779ba24c8b5740d1ff29a30c5b8920519885c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.4/kosli_2.6.4_linux_armv6.tar.gz"
      sha256 "4994df93f92c0d2d139447d8dd27e6c8b08d01c5bcb438340f857132e13d6b2d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.4/kosli_2.6.4_linux_arm64.tar.gz"
      sha256 "81f9d4d86dfa084f7c90aeb3ff7885c0bee642a196e1ca74d594a597b5049740"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.4/kosli_2.6.4_linux_amd64.tar.gz"
      sha256 "868516e2a0d572125c38baa4cbfb6852f3f8bd6e5b341799287166957fef6e4c"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
