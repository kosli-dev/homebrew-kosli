# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.39"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_darwin_arm64.tar.gz"
      sha256 "a17700fc5f5a892df6a6048da2ceccaa2b4b978616e8af7c03b35292c2fe973e"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_darwin_amd64.tar.gz"
      sha256 "03b9ad3e63ba699533b20dff21c50f75d6b89d8f3a08aef50e1bd5ed6d00326c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_arm64.tar.gz"
      sha256 "5adda8e58ab84fb8341aee950c94055016063cea840cae483c9931f8ef9c7e8b"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_amd64.tar.gz"
      sha256 "1277c59c9ef6014a75e5a70ef4f480ad4cc86bed5686a7114fa0f431486e3b64"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_armv6.tar.gz"
      sha256 "78672c0d5912054dd8e2b93068f9aed7b5b33e5c3fd76aa2acaba164865470e7"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
