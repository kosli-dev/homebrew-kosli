# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.25"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.25/kosli_0.1.25_darwin_amd64.tar.gz"
      sha256 "1b736aad5e8eadd064dc85c85511a7a270fea9c5f3ce750b00d1cbcbab7673d5"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.25/kosli_0.1.25_darwin_arm64.tar.gz"
      sha256 "59bd1085a660978f46f13388f47cc3a1b026683d99b992f5b9df75d0d0edad2f"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.25/kosli_0.1.25_linux_amd64.tar.gz"
      sha256 "e65c9a6aa026837cc7ec37503eaf04c9133d5ca2a44addee9026fb650f8f3a6a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.25/kosli_0.1.25_linux_arm64.tar.gz"
      sha256 "784a698a1fd60c4e8ac8281e67a3f8a8a64755811ea0c9757ad76ff3afc5d616"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.25/kosli_0.1.25_linux_armv6.tar.gz"
      sha256 "7730d48b17c9d0086171a15abfb570691e7695f8cd16ef93431fc5eb4c41e1ad"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
