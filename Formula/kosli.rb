# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.7"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.7/kosli_2.6.7_darwin_arm64.tar.gz"
      sha256 "9f420423b3b39904b7ef937dedac89131be384b7567c072b320d3a5442fc6ddd"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.7/kosli_2.6.7_darwin_amd64.tar.gz"
      sha256 "22a7ee8f25653dfb1ce24e797fb25a64563e41060ce23aee54f5a30b010321f1"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.7/kosli_2.6.7_linux_arm64.tar.gz"
      sha256 "e2c36e4ad1bc2f19d5a67f0569fc8f019c93ed1e1201540d978f1616c56852ef"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.7/kosli_2.6.7_linux_amd64.tar.gz"
      sha256 "37cc967b4f32ff01421a65dfb17f09604f55fa4d17cef48fdd2d77dab63f80bc"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.7/kosli_2.6.7_linux_armv6.tar.gz"
      sha256 "9440368afcab8d6f4afc1495071ac4a68585877fd783e407b067ca8ad9b33b28"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
