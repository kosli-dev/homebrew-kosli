# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.39"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_darwin_amd64.tar.gz"
      sha256 "c82aa52d3afd67745c3c4152ecfb1d0b38220a88399339e2ed4da55d0f41950c"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_darwin_arm64.tar.gz"
      sha256 "f5fd3fbaf002fc32dc174b5f6be1269ca33ac3e4e9e99659801a669cf838fac9"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_amd64.tar.gz"
      sha256 "249ad72d07ed58955bc2f3be66a9e16bc15356f44a672d726e1cb1b73b49b94f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_armv6.tar.gz"
      sha256 "107276c72bd5de8683c37f8ac2255aa7a68b390edc1c9698909333150ec71d87"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.39/kosli_0.1.39_linux_arm64.tar.gz"
      sha256 "84cc6ea54883add08484efb6ed722d3f21e690a6bc163840b7a6be32100c9aac"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
