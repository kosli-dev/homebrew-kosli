# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.23"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.23/kosli_0.1.23_darwin_amd64.tar.gz"
      sha256 "aabf40642e0aaeb7ca17e99ae43f022cc3670a20dfadff7200469149fc8f4c51"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.23/kosli_0.1.23_darwin_arm64.tar.gz"
      sha256 "76c8e222e1cc9d4c32f63c08b159f845b43436710c96f419c27e9a6528ba6b44"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.23/kosli_0.1.23_linux_armv6.tar.gz"
      sha256 "61fce288e6591a8f8e55c86e43344ad281f53b8fe5358876fb34406a770d1b3b"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.23/kosli_0.1.23_linux_arm64.tar.gz"
      sha256 "b97276d49d4da09bd979e00b6dfabca002817a6a3e2bfc8815cf0931db09c1aa"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.23/kosli_0.1.23_linux_amd64.tar.gz"
      sha256 "46c444fcad62733e9b891c5abee1765860ab13a1ce95a1455a0329c79fd57ea5"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
