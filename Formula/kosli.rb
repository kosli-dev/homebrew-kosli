# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.4.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.0/kosli_2.4.0_darwin_arm64.tar.gz"
      sha256 "ac293abdcc70195f01af48cd5d5c5f72fc511621f6d03a090300bc79226b701d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.0/kosli_2.4.0_darwin_amd64.tar.gz"
      sha256 "e85d12f587eaed2367faf620cd41436e0462aebcbae71ed447b8925e1e49d8b7"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.0/kosli_2.4.0_linux_armv6.tar.gz"
      sha256 "eb08cdb58de941e158498ef210d2729c9c425dfe873f17eebd89cfe368a224a7"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.0/kosli_2.4.0_linux_amd64.tar.gz"
      sha256 "18b1ced4b5864d1d6852b7759a16cff3f3dae7a3b0b068e97580a9c5d26c8634"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.0/kosli_2.4.0_linux_arm64.tar.gz"
      sha256 "6229664ba9e97e443e2bc7f3b4e0449d92b489fb559d755f20e758651b375f56"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
