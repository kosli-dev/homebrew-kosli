# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.5"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.5/kosli_2.3.5_darwin_arm64.tar.gz"
      sha256 "ea5d0ea27207a7a16650f3f60690438f7a3083e6d7b19416f7d792ef84ddfdad"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.5/kosli_2.3.5_darwin_amd64.tar.gz"
      sha256 "c4b926501a5f9f0dcda86273b6431723f6f692cc8192c7e7df51824921cd4fd7"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.5/kosli_2.3.5_linux_arm64.tar.gz"
      sha256 "964bc8d545ceff0516b5801967c394af31d3d9ad88132d68538583ddc5585529"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.5/kosli_2.3.5_linux_amd64.tar.gz"
      sha256 "4b86bc13d568ca4aa1b22d263417d1b19739405ded55982decf18a605afeae37"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.5/kosli_2.3.5_linux_armv6.tar.gz"
      sha256 "58859b80beb679406297041778be08bc8009f5401f784fc3b673f0b0bc404205"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
