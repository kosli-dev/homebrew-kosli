# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.5.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.5.0/kosli_2.5.0_darwin_amd64.tar.gz"
      sha256 "65203c61a8cdd5a124ea25eafb512f5392085a2521889c20d3a596c030e9250d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.5.0/kosli_2.5.0_darwin_arm64.tar.gz"
      sha256 "0693a783f1a5ee110138cec08ca9489141ab6231e1c7311168c1330cab0be36c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.5.0/kosli_2.5.0_linux_armv6.tar.gz"
      sha256 "17d4feb1a042f95ca8296eacaff187095d60c6ce02e885e1b3ffc14e1507d687"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.5.0/kosli_2.5.0_linux_amd64.tar.gz"
      sha256 "c9878b03114d6b4406e818308c27337d926e1144514881f13cf6b964212cc83f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.5.0/kosli_2.5.0_linux_arm64.tar.gz"
      sha256 "3b5033a0b095e4a706e73462559a9d5ebcbf5dc62c4bc5c9f2b48f0a3af89d50"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
