# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.33"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.33/kosli_0.1.33_darwin_arm64.tar.gz"
      sha256 "21ebfe0e0e392836392e0ebfdd89c8edf25efb53b447fa730e064bec534c1c8d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.33/kosli_0.1.33_darwin_amd64.tar.gz"
      sha256 "f6fb22c224f66a1a5f7f9c930adbdf75bb4f13c8284a623722eaefc04d80a997"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.33/kosli_0.1.33_linux_arm64.tar.gz"
      sha256 "8b5922cb8fa5e637d4f6f0d76933d02fcb0cbc81cbf48079293f2ac12c421b3a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.33/kosli_0.1.33_linux_amd64.tar.gz"
      sha256 "de056ef434c4e69702fe96daea7166174a02df1538ba602a33de18d4a7d7be31"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.33/kosli_0.1.33_linux_armv6.tar.gz"
      sha256 "012ac2d47130b0235f4991cbaf7db3ff355f85c8bbe96e9c4f9248f309fab374"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
