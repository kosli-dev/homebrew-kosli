# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.12"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.12/kosli_0.1.12_darwin_amd64.tar.gz"
      sha256 "4eb0ddb25b8918788cdb60e1193c30b3dbfb0e824eebc1e05200bb0c2eb4d07d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.12/kosli_0.1.12_darwin_arm64.tar.gz"
      sha256 "19ca8e30ed47a77fd21e06169cfe0c7f61739250cb12d390e68be717cdcf5bba"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.12/kosli_0.1.12_linux_amd64.tar.gz"
      sha256 "f2959ac87059631704c55a03ce82e91dce647b4dbbb4f583c3af07119040709d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.12/kosli_0.1.12_linux_arm64.tar.gz"
      sha256 "f059193f3062f582607ceb097cae25bfedb3fc5373b974afc1d2968524c73921"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.12/kosli_0.1.12_linux_armv6.tar.gz"
      sha256 "adffaef6629824f2d70928045d9b35c35efe426e304b0bef4397bba54a9d29c9"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
