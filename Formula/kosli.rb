# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.1.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.1.0/kosli_2.1.0_darwin_arm64.tar.gz"
      sha256 "b85fa7514c78cb96cfa9f62499aea0257a7bcefb0a3e6d4c40e9f0ec9906b6d4"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.1.0/kosli_2.1.0_darwin_amd64.tar.gz"
      sha256 "8903f69125f81679e1ff827ddc74490c1e74a0b5a8d59cd59d3411eac15820b3"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.1.0/kosli_2.1.0_linux_arm64.tar.gz"
      sha256 "ae54c4db42e4b8498ac7ef03a3f729ebeaace629da08e5cc32f72f7549567b36"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.1.0/kosli_2.1.0_linux_amd64.tar.gz"
      sha256 "4c2695cda4cb13dd246bea07d6a9581156fb9717b31acda4055dcb4608ef349f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.1.0/kosli_2.1.0_linux_armv6.tar.gz"
      sha256 "42d19a4a90f418c883afe0350fbad06a17b058741459136dbc313243aac15bad"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
