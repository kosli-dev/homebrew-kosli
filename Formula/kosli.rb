# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.40"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.40/kosli_0.1.40_darwin_arm64.tar.gz"
      sha256 "d5563ab5b36e832cf27c79d2605a9afedac662b33269977cb6cd24a90a71c3a1"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.40/kosli_0.1.40_darwin_amd64.tar.gz"
      sha256 "3a395aa5ca544d4fbf420d20b0ce7f4c6c31f1f7f5cb0ad5614880c0fa54ee55"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.40/kosli_0.1.40_linux_amd64.tar.gz"
      sha256 "8a33df36f22aca6e8b754537cb8c9810a04b2aeff14cabc71e90e992a36def7a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.40/kosli_0.1.40_linux_arm64.tar.gz"
      sha256 "72b85991202c86cc8884256ca05a35b130b75d30bdc583838ebae886198b6828"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.40/kosli_0.1.40_linux_armv6.tar.gz"
      sha256 "0c11e95240e30f5acda27cc800cdec77f8d6d2c904ac1b103ad5193f9147cb5a"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
