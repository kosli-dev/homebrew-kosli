# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.14"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.14/kosli_0.1.14_darwin_arm64.tar.gz"
      sha256 "ea229954212e81d27861de9c41e958756b4af8980f3f9d4e869ae1390fa09138"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.14/kosli_0.1.14_darwin_amd64.tar.gz"
      sha256 "cbb0e727bc563797470f6fb561b8f72132ce51ca9fa61435ad0d83933aaea1b9"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.14/kosli_0.1.14_linux_arm64.tar.gz"
      sha256 "f3a8682b93083474065e0a556e72940beddc8b35efee19576f626cf7a30003fa"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.14/kosli_0.1.14_linux_amd64.tar.gz"
      sha256 "d1cccd999150c4d9ac71680aed67f6e8807919eae0addf2d6d7a16859e417031"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.14/kosli_0.1.14_linux_armv6.tar.gz"
      sha256 "93578a5e92cd29b5b7455c376561453ebd2e831e1a5f83a1d66161b41eacec46"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
