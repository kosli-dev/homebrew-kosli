# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.4.1"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.1/kosli_2.4.1_darwin_amd64.tar.gz"
      sha256 "6d75c228d11a9cc38f9a052c340e071b28243149894a7c8201b938d22b04aac2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.1/kosli_2.4.1_darwin_arm64.tar.gz"
      sha256 "43d3006e613b60e0f9ed31acc94a66657166d81dc9a6acc34956a48752ecff5c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.1/kosli_2.4.1_linux_armv6.tar.gz"
      sha256 "6a0431f27dc52624d5495d058a6e5ccca950e7c7294d0016339813888bd11200"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.1/kosli_2.4.1_linux_arm64.tar.gz"
      sha256 "95c76675fadcfcef0cc58040c60149cca1e7a3f04f0829b7303845112b7bb133"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.4.1/kosli_2.4.1_linux_amd64.tar.gz"
      sha256 "9a5b268ef28804f87777dfa8f0a988f525a4659e2ff026ce9390a4a25b6b4824"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
