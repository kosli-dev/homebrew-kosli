# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.35"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.35/kosli_0.1.35_darwin_arm64.tar.gz"
      sha256 "33b1d89c3d14e8a72a14d2e4bdb0626ed1f33fd1c1e921135063564ff2b622fc"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.35/kosli_0.1.35_darwin_amd64.tar.gz"
      sha256 "fd2f189b0be9f5f85048a38a163346e8ceb49cd417a3b5799e89ea05b6cbc00f"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.35/kosli_0.1.35_linux_amd64.tar.gz"
      sha256 "f27c66958c76689e73ccf43931b1956f3b1007b44c8a71f1b8764f72c3a8dbbd"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.35/kosli_0.1.35_linux_arm64.tar.gz"
      sha256 "6e6f9bae9d84655c3e292b1563071c84b3eee8355a2a6a6826677ed212c7121b"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.35/kosli_0.1.35_linux_armv6.tar.gz"
      sha256 "ff666f03a51aeb14725dba90ff356dc8bd9c955cc238361de33e5241fe5960b7"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
