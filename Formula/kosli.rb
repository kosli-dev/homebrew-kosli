# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.32"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.32/kosli_0.1.32_darwin_amd64.tar.gz"
      sha256 "9111f8e2f1940a99be78ea8737ddb418e1c790f239a14f281d85fbac79dc26d2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.32/kosli_0.1.32_darwin_arm64.tar.gz"
      sha256 "66918bbfbecb8b79d159270e02bc70ba26af93fcc6fe65ed303b8f4d9c3be92a"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.32/kosli_0.1.32_linux_armv6.tar.gz"
      sha256 "4f4d2109f538663850fb30a12a5ad1b962b512c61cb3c919e643b7402317c946"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.32/kosli_0.1.32_linux_amd64.tar.gz"
      sha256 "6655662fd4687bbd004a1acaaf9fecf9a247a5919cd4f14ce9de1fb4a6acda45"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.32/kosli_0.1.32_linux_arm64.tar.gz"
      sha256 "1a2a073d51331a7ba61bde7f19282e74751e10ffab87fc455e63d524807ca19d"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
