# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.5"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.5/kosli_2.6.5_darwin_arm64.tar.gz"
      sha256 "8856b6e0a66a9e6897b27de6a45c3b742986067839d042977678072e108990d0"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.5/kosli_2.6.5_darwin_amd64.tar.gz"
      sha256 "ceba084ff8eef8671b574f570fb73570148f4f54ab9166694a5791865f7688dc"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.5/kosli_2.6.5_linux_arm64.tar.gz"
      sha256 "94cc564873bdcca387d0512f7da80cf7a674f57a3a8631aeb5b7fee5587776a1"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.5/kosli_2.6.5_linux_armv6.tar.gz"
      sha256 "15723b73e9d52ccdc42cebc92ba3ec0141e113c8204fb7fef887c6788c06ee20"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.5/kosli_2.6.5_linux_amd64.tar.gz"
      sha256 "cfc96ff39d8b429d7a82b32476becb8fa66118912e21868cd0113e74076d9ace"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
