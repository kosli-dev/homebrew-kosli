# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.0.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_darwin_amd64.tar.gz"
      sha256 "c200d2915577a352df9fd41c6fa275ebde197059ff3845be808cc1ebeae446b6"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_darwin_arm64.tar.gz"
      sha256 "d313711fce99a8f2b0f83fbffe0d3753d6b79f84283971f6d18b9f346eacd35c"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_armv6.tar.gz"
      sha256 "ba3ba7b4505a20cee76c740d21991f2eae17377f2580150846eb74db61940894"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_amd64.tar.gz"
      sha256 "39b20218f162d4fe2e57969ce419adf27821a588820a4690be5d06a531f1f694"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_arm64.tar.gz"
      sha256 "822a02a220dd053f831dc636e86d56912fe8a8977c65f8047f998646449783ab"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
