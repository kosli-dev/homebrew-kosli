# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.11"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.11/kosli_0.1.11_darwin_amd64.tar.gz"
      sha256 "a6d33912d7f3c7402642e523a0970cd193eefbdea747b5bdc4ba052891e50c33"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.11/kosli_0.1.11_darwin_arm64.tar.gz"
      sha256 "5cc4c121f9950bd2cbc41feca5df77f01c233e62ab2438a779ba45b587a626b8"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.11/kosli_0.1.11_linux_amd64.tar.gz"
      sha256 "c1be41bc40ecaf6b98fd0a475e76d4dec1047197543c58df28189c5909303953"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.11/kosli_0.1.11_linux_arm64.tar.gz"
      sha256 "a2a6b75135e7dd58ad88f1db595e7f9f33563030a0541908f5f243161c1de33f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.11/kosli_0.1.11_linux_armv6.tar.gz"
      sha256 "1128fa769c9d8887d714b451dc5aa134f0e1e8ab6aaa9541136fd27e19210890"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
