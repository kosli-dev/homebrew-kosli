# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.3"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.3/kosli_2.6.3_darwin_amd64.tar.gz"
      sha256 "a7ad67aa85a0eeacd8c473112b94cb75d1c50e1d96e4d21bbe67a3c035ca102c"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.3/kosli_2.6.3_darwin_arm64.tar.gz"
      sha256 "989bd097303ab52eb7804735d2d10d8faf6c0f6d7c32157ecbdfab9909b0ffc8"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.3/kosli_2.6.3_linux_armv6.tar.gz"
      sha256 "7c8b50659b463b52139851c0f77b0e3bf4783558c64b9dfb247a9935b586dd9f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.3/kosli_2.6.3_linux_amd64.tar.gz"
      sha256 "9e44390991b68150160b5c37e83d480525c4cae40f8723ca336e867454d67f12"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.3/kosli_2.6.3_linux_arm64.tar.gz"
      sha256 "2490584801343f39f1cc7539e72616437d3147b22ec73ed7f521c32de02720c7"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
