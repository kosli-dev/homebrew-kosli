# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.10"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_darwin_amd64.tar.gz"
      sha256 "e3148e40e607ec110cbf9e535755fbbf199d47edc0f8b16683006f6a7e3e5a8d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_darwin_arm64.tar.gz"
      sha256 "502bc6631910f89f856c01e806cb636cbbecc14086e81c3732b9df4499288c6a"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_amd64.tar.gz"
      sha256 "c0288633d287c91e628040b5c8b893109d2f1ec30d9648c3d87d44b0fc75ccad"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_arm64.tar.gz"
      sha256 "62f59e2f1a7cfd965792ef1b23966b76891c55be9045a2d9fd0b64a75aa8a7c3"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_armv6.tar.gz"
      sha256 "880b1cae6638da14fc586d84a35e7ff730626c092b31713c5facfed734d4b70a"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
