# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.41"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.41/kosli_0.1.41_darwin_arm64.tar.gz"
      sha256 "8ebd44e9186d97fb40fabaa64d665bc277baac28923f510ac6d2e14a147739ae"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.41/kosli_0.1.41_darwin_amd64.tar.gz"
      sha256 "ea06f39e6ec0ff8271b2e70b97e06bb6a0559309947b55b509ccb575e73f6a4a"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.41/kosli_0.1.41_linux_amd64.tar.gz"
      sha256 "fb4949ff9a5f64972462c66675f44f1d0cb8bf9d9d5678b0dbd979c7d9f639a6"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.41/kosli_0.1.41_linux_arm64.tar.gz"
      sha256 "dc9c76b7f47b2b9571bc06e30a21fdd0d0f62334b7ebeb8abe9bd4b30418669d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.41/kosli_0.1.41_linux_armv6.tar.gz"
      sha256 "3a065885865f5a6d765d3a467e1cfcbcdb88d5096d8d2f0b44bb6404d81349d7"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
