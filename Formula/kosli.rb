# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "A CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.10"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_darwin_amd64.tar.gz"
      sha256 "d358144e4676537d9903b19c8e42e98dec8f2009917a45bcc28cf8cba153061d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_darwin_arm64.tar.gz"
      sha256 "83bef7cfc1fca1794d102eb164593c6d094caf3f83e3a055b763de82415e8c87"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_amd64.tar.gz"
      sha256 "2ff19c46c90b4c56660eb222f297ae91ae918c0ce024cb88abd9eaa291eebca3"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_arm64.tar.gz"
      sha256 "a421d9b3834063d6c4223ba20c064ee5571ae793b1863448f909c63e437e732f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.10/kosli_0.1.10_linux_armv6.tar.gz"
      sha256 "604a711a46099adc90694aaa8fed391ea005d5c20f3dc8e34b8e8edcb1712787"

      def install
        bin.install "kosli"
      end
    end
  end

  depends_on "go"

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
