# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.13"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.13/kosli_0.1.13_darwin_amd64.tar.gz"
      sha256 "186b3bbf1e746dd7f92a4db93783aea4ebb3f76b4a873f25a15c760cc39498bc"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.13/kosli_0.1.13_darwin_arm64.tar.gz"
      sha256 "144ea73f403e783ba23a513c86499ca4d3a90cd9022bbf1257d34ee7908fccda"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.13/kosli_0.1.13_linux_arm64.tar.gz"
      sha256 "c3d0091fc6b7c2ee573a81f717367312404e97340d6e4443a58e4e8b394fc249"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.13/kosli_0.1.13_linux_amd64.tar.gz"
      sha256 "1cfd9d31efd0f088bb5da1ea40f7a720dc3c3c8823a88c2b67ae1a160160c61b"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.13/kosli_0.1.13_linux_armv6.tar.gz"
      sha256 "218110544226403f3bbd216f39d4f6b61d03f48317abb90751daff1483534d38"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
