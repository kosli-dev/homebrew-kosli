# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.19"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.19/kosli_0.1.19_darwin_amd64.tar.gz"
      sha256 "75c517c577241af9de8ff37cd0f387a290007d1a76742de21333b7a4c4b95e44"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.19/kosli_0.1.19_darwin_arm64.tar.gz"
      sha256 "4e4bab45a79d8bfd2476da7ec4789744d20d68350cf71f7747f96f09275f809b"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.19/kosli_0.1.19_linux_amd64.tar.gz"
      sha256 "2fd3cad94a33ae773a16b513e04a6bfb025673d654e23239f81dfbf45955ec91"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.19/kosli_0.1.19_linux_arm64.tar.gz"
      sha256 "90398c9ee8d1226ae9e34ae2fa5aac067f49a4ca2bd75ac437ef47cecf9d3ee3"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.19/kosli_0.1.19_linux_armv6.tar.gz"
      sha256 "9ede6934c2315001d2fb694cee4723ad17406ad42b082274066b250f0d75cacf"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
