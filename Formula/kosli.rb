# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.27"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.27/kosli_0.1.27_darwin_arm64.tar.gz"
      sha256 "e3a7ca62a292e337503436d3edafebb7aa381de67876343a4fc7a907cbef8a0e"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.27/kosli_0.1.27_darwin_amd64.tar.gz"
      sha256 "1ae6d451ede794ffe59845e5bc0039765d2045449c6267fe6540dc705db2388d"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.27/kosli_0.1.27_linux_amd64.tar.gz"
      sha256 "4eb5d136235b3679316cff7dab18fd04f4d7284b0bc1d16145bde9384838cd7a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.27/kosli_0.1.27_linux_armv6.tar.gz"
      sha256 "a1154fd425f56b761529ffce270e2b2908f287179611ddd437ae6d169f2c184c"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.27/kosli_0.1.27_linux_arm64.tar.gz"
      sha256 "407ac6f59fa523e5e84c2d2def85e378dc20c9237bb685cd9b64a63807eeee11"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
