# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.2"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_darwin_arm64.tar.gz"
      sha256 "aadeeead78b5f8d5f6461318bf2210e85e3ca614571ee41ba28d795e89359923"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_darwin_amd64.tar.gz"
      sha256 "779926123a205982fe2dcb05171b90b4e422fa7689ff8b245de88cc3f90b26ff"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_amd64.tar.gz"
      sha256 "d54edc71b4c34d2077b04abb34a15ad369da8b8e4f8354cbd0df233949790f4d"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_arm64.tar.gz"
      sha256 "2b15804da7ba90297906066643269c7690f56c945cb6b80f5d9817cc88b71fa5"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_armv6.tar.gz"
      sha256 "51d175433d8494acd0d7af34fd47c19afc76832e1b3ef8b51fc9de6094f57091"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
