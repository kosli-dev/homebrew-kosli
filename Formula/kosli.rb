# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.2.1"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.2.1/kosli_2.2.1_darwin_arm64.tar.gz"
      sha256 "88929c4211720717a5453493375c1047e05ddf33c671345f54d6465ec15e49bc"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.2.1/kosli_2.2.1_darwin_amd64.tar.gz"
      sha256 "8fb9d3bd28850143f30a54df880a0669bf8cfe23fadaf905f4966ba5bff466cb"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.2.1/kosli_2.2.1_linux_armv6.tar.gz"
      sha256 "08a33c918396a10dc8e6351b9f26f83e2ba966fe83b25c67eafc555573c6b339"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.2.1/kosli_2.2.1_linux_arm64.tar.gz"
      sha256 "7ee8a09747dab80677505331d83b4fc569b3fc45f0365d8ee28a81d5a58acaa0"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.2.1/kosli_2.2.1_linux_amd64.tar.gz"
      sha256 "985d7fcf91da8259c87050bfb70dbeda780f7680beacb33ffb286363b750881c"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
