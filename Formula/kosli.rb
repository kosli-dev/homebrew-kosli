# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.37"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.37/kosli_0.1.37_darwin_amd64.tar.gz"
      sha256 "a1a0899650bce1c0f4175223419cf7dbcde1f04a238fe352a1448963c88c8690"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.37/kosli_0.1.37_darwin_arm64.tar.gz"
      sha256 "f1a5d0fc3ad459daca698b36c98018a654ca38fbfe44f09b3c2c113bc6703462"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.37/kosli_0.1.37_linux_amd64.tar.gz"
      sha256 "398221e632029dc891267cf804af7e3765c28ebacd03b1b6b07fd097f20b4283"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.37/kosli_0.1.37_linux_arm64.tar.gz"
      sha256 "187d391825ae85a86f9e0064733125927c9fd2f4fee772ce0dde9ac7ef6d1444"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.37/kosli_0.1.37_linux_armv6.tar.gz"
      sha256 "e93efc48f8fbd105c3e0dcaf4e32c3633726dbfaaa7b506160644395339253a7"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
