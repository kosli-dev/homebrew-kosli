# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.0.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_darwin_amd64.tar.gz"
      sha256 "5effc4d4ff7faba98a2bc1bca838040d327d8f7359eb336b0231db5620fa5a59"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_darwin_arm64.tar.gz"
      sha256 "93857a73c54bbcbaf93db8c251c2f6ed6eaa38583a9b6357bf61f1c81cae4aa0"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_armv6.tar.gz"
      sha256 "1c274b2fbb56b9f56da3c5452924b85a49b9c7919fe3c3fe4dcd6dba6f7109f2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_amd64.tar.gz"
      sha256 "d979a1619fb5b2113bfdc494e97680f78ea7eb228b48afcbc308d0f62e3f6469"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.0.0/kosli_2.0.0_linux_arm64.tar.gz"
      sha256 "a9c2d16d6c52b82ed58002622e9d9ecc3463852e93fee2f6d3bc9df369fd8526"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
