# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.29"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.29/kosli_0.1.29_darwin_amd64.tar.gz"
      sha256 "87efd3829f6a42e059d13806794543f11daa29aacab5dffe4e9e37c42740bef2"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.29/kosli_0.1.29_darwin_arm64.tar.gz"
      sha256 "7dea896eb4a2f5300b1db80681dc6a93607de233f10474248e41a48bf7e06abb"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.29/kosli_0.1.29_linux_armv6.tar.gz"
      sha256 "5124e098d51fe7818ed7b365536901c30073285b48eedcc92168c1674b7986b5"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.29/kosli_0.1.29_linux_amd64.tar.gz"
      sha256 "240a3658fa2e3043500c2a9663f1439057e7185532dc97f7e6707d610afc15cb"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.29/kosli_0.1.29_linux_arm64.tar.gz"
      sha256 "c5ac8589f6688221ec90d6ad0b367bc33b594e0973053c86b3d92266f290882c"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
