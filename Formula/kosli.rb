# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.1"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.1/kosli_2.3.1_darwin_arm64.tar.gz"
      sha256 "23472d463b70610f28c6b9325ab290478ba39ce612a96a894a09f2e075dd8a38"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.1/kosli_2.3.1_darwin_amd64.tar.gz"
      sha256 "26631560e538bd3af184a1a4dba1b9b4dabab9a149ac0d56e75582b216237042"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.1/kosli_2.3.1_linux_arm64.tar.gz"
      sha256 "fb34560425ebd2e530f4cde21fa82d3d195c20dbc2fae502635d355edc4daff5"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.1/kosli_2.3.1_linux_armv6.tar.gz"
      sha256 "ce7bf60c7fda23faeb64531ae7e81554ee1d1b5ac1cdf23ab967c9639ddd3b56"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.1/kosli_2.3.1_linux_amd64.tar.gz"
      sha256 "3a921c1372bb5bfa5b1ab5782d77d8687c9ac78614560f044c8abdf0f9f2d2e3"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
