# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.6"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.6/kosli_2.6.6_darwin_amd64.tar.gz"
      sha256 "f69b6b949aef349118a66930ffd348ec60f2f039e349b4d0daedf15de0962b38"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.6/kosli_2.6.6_darwin_arm64.tar.gz"
      sha256 "cee0e7bfe46aeb0ce97894bbff3f802fe458b0edbefc5bc665cc4a6cd9de3689"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.6/kosli_2.6.6_linux_armv6.tar.gz"
      sha256 "be6f431b60c262cbfda1346008b9fbe48533e0043508eb7b4ab834cc0c39ebaa"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.6/kosli_2.6.6_linux_arm64.tar.gz"
      sha256 "913f6704f9adc6212073bcf3728cf789b8c5341c4428a71e06393983a27602f0"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.6/kosli_2.6.6_linux_amd64.tar.gz"
      sha256 "dd033e13f4271c4fff603362a3c54f840321aa94b6af7e13aa21aa6d19aca05d"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
