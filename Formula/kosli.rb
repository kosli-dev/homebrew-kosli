# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "A CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.9"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.9/kosli_0.1.9_darwin_amd64.tar.gz"
      sha256 "146520b1577cd7691944fb134e1493fed4292d77a67756c6d7155d54be041b93"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.9/kosli_0.1.9_darwin_arm64.tar.gz"
      sha256 "63fe66dfe81a4d4f4d92536fee523cbcd633d42e92d95d57e7ab88d32d4f6927"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.9/kosli_0.1.9_linux_amd64.tar.gz"
      sha256 "62077cebbdc378224997443ec657f47c4cf2e85ef4e601c39993065602595ed0"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.9/kosli_0.1.9_linux_arm64.tar.gz"
      sha256 "9622f22802cecadd42af295a86b74f0807f08984bafc0c5d0053335a78a77ecf"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.9/kosli_0.1.9_linux_armv6.tar.gz"
      sha256 "a2fadc25a4df25afbd27e504da87ff72891249b3ceaf47cec2ea07292bc186a4"

      def install
        bin.install "kosli"
      end
    end
  end

  depends_on "go"

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
