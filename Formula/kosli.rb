# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.8"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.8/kosli_2.6.8_darwin_amd64.tar.gz"
      sha256 "3b579772738feb652cd224576a09713f4dd0616c5c7dfca84df8ec001ad0ce5c"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.8/kosli_2.6.8_darwin_arm64.tar.gz"
      sha256 "1697ddaccc084d9afa2b32f2fac93398bc437520ea97affc6b25d3073e6e3a7f"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.8/kosli_2.6.8_linux_armv6.tar.gz"
      sha256 "aeaec247d3880128ddd6d3115e899e6643629fa6e8ddb17c437ef9c20c431cac"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.8/kosli_2.6.8_linux_arm64.tar.gz"
      sha256 "f3116b9647899cb92b6f1f7ebb506d2d3523e3bd91fc41358d7c0643736e3d47"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.8/kosli_2.6.8_linux_amd64.tar.gz"
      sha256 "d425855db7bd62fff26f346f03c68e0e6fed06e7cdfecedcca566003962fe5c4"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
