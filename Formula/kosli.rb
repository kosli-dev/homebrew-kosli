# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "0.1.26"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.26/kosli_0.1.26_darwin_arm64.tar.gz"
      sha256 "4a4fd323f19de76f1135fcdc39dcbcdddd6ce067dbcaa08ec349f2eb56ed0812"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.26/kosli_0.1.26_darwin_amd64.tar.gz"
      sha256 "7d853b2c4c6b0fa04eb6d04372e0c19a68a0ef686ea5abcf949798775aa92f70"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.26/kosli_0.1.26_linux_arm64.tar.gz"
      sha256 "983f5668881e37970952b819b9cf8d31dcd444ea678f35723c7326abb193edd7"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.26/kosli_0.1.26_linux_amd64.tar.gz"
      sha256 "bbbd073ab07c707bfd3056eb817ce6612f3b0eed2d24bc5a6fa3a36a1cd96d10"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v0.1.26/kosli_0.1.26_linux_armv6.tar.gz"
      sha256 "596c22f2852361636f2268b4bef02ac2643cc497cc242ce08b966a0574289e0b"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
