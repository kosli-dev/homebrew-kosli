# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.3.2"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_darwin_arm64.tar.gz"
      sha256 "22f35a96c08cbe09fefb92ab031e3448e1aba7b4dbbc77288bbd8402f16afa37"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_darwin_amd64.tar.gz"
      sha256 "0b3cae3067071334b9867e02c893ba0481fc8baefa64a7689b93c645ecbac509"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_arm64.tar.gz"
      sha256 "710ae9fe3e2221fca520735b9c0204a5958978c21e26c619021bdc506cd072aa"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_amd64.tar.gz"
      sha256 "695993e40e19ce9bdc8ae0bdb2fbe1a958bd3b4a64dbf192dcef651bcfd49222"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.3.2/kosli_2.3.2_linux_armv6.tar.gz"
      sha256 "d232980bbdf710fda4211ff8ad3a1ce44a852e89c1f6d6ef11197552d996459f"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
