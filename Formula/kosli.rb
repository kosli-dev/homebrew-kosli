# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.1"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.1/kosli_2.6.1_darwin_arm64.tar.gz"
      sha256 "7341190ba97890a9482b2fa417bd9d146f6d7bcade45ccf937ded465e3fc6e7a"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.1/kosli_2.6.1_darwin_amd64.tar.gz"
      sha256 "47c285512e5c9b275c22c175715c9b4c8c360f25595a7f1e8cd729a4b49fdac6"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.1/kosli_2.6.1_linux_armv6.tar.gz"
      sha256 "df01c70057fb2f35021f265cfe5937cc2bd3589ee4078a11d9b0276d7b823332"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.1/kosli_2.6.1_linux_amd64.tar.gz"
      sha256 "dba9de379641e68b156238685c932087d1839138767ed3343b7ff21a98c8d5ec"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.1/kosli_2.6.1_linux_arm64.tar.gz"
      sha256 "a73ae4d38e6491392f2639fe061cee899466255fbb15ed5eee12ca752a01b5dd"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
