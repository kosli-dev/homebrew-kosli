# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kosli < Formula
  desc "CLI client for reporting compliance events to  https://kosli.com"
  homepage "https://kosli.com/"
  version "2.6.0"
  license "MIT"

  depends_on "go"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.0/kosli_2.6.0_darwin_arm64.tar.gz"
      sha256 "b387eabf1f5b50b8cd58ac0da4e253dc7f7a8ea25a95dfd3f9a9707a00173829"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.0/kosli_2.6.0_darwin_amd64.tar.gz"
      sha256 "6796b0e564d00a7471584654f4b4f355d407cdc3a86f5c54bb7ab762d93dc6d1"

      def install
        bin.install "kosli"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.0/kosli_2.6.0_linux_arm64.tar.gz"
      sha256 "1c1478a7f853d192e128c3a3d90ce1e64d302202852f493fc8f3fadb8076252f"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.0/kosli_2.6.0_linux_amd64.tar.gz"
      sha256 "fbb9ebe2f81da1ab046c1c81f7d54efb81c76df8dfc97ff1969d60603a4945d1"

      def install
        bin.install "kosli"
      end
    end
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/kosli-dev/cli/releases/download/v2.6.0/kosli_2.6.0_linux_armv6.tar.gz"
      sha256 "37fd25a0921bcd0f8a28c3e61595e8723576fa0c20521b28a36d41dba836de2e"

      def install
        bin.install "kosli"
      end
    end
  end

  test do
    system "#{bin}/kosli", "version"
    version_output = shell_output(bin/"kosli version 2>&1")
    assert_match "GitTreeState:\"clean\"", version_output

    if build.stable?
      revision = stable.specs[:revision]
      assert_match "GitCommit:\"#{revision}\"", version_output
      assert_match "Version:\"v#{version}\"", version_output
    end
  end
end
